#!/usr/bin/env bash

set -u
set -e

iso=vyos-1.1.1-amd64.iso

machine_name="vyos-ami-build-`date -u +%Y%m%d-%H%M%S`"

if [ "`uname | cut -b1-6`" == "CYGWIN" ]; then
    # Taking advantage of a program called VMWareGateway: http://www.l4ka.org/159.php
    # There's another application, NPTP, but it's interactive: http://shvechkov.tripod.com/nptp.html
    pipename="\\\\.\\pipe\\vmwaredebug"
    socat_pipe_name="tcp-connect:127.0.0.1:567"
    pipemode="client"
    namedpipe="yes"
elif [ "`uname`" == "Darwin" -o "`uname`" == "Linux" ]; then
    namedpipe="no"
    pipename="/tmp/$machine_name.pipe"
    socat_pipe_name=$pipename
    pipemode="server"
else
    echo "Not yet implemented for `uname -a`"
    exit 1
fi

function shutdown_vm() {
    machine_name=$1
    socat_pipe_name=$2
    echo "* Shutting down VM"
    ./poweroff.expect $socat_pipe_name
    while true; do
        set +e
        VBoxManage showvminfo $machine_name | grep ^State | fgrep 'powered off'
        if [ $? -eq 0 ]; then
           break
        fi
        set -e
    done
}

VBoxManage createvm --name $machine_name --ostype Linux_64 --register


# Add serial port
# Needs to be split between two steps else I get an error about
#  server mode.
VBoxManage modifyvm $machine_name --uart1 0x3F8 4
VBoxManage modifyvm $machine_name --uartmode1 $pipemode $pipename


# Create SATA storage controller
VBoxManage storagectl $machine_name --add sata --name sata --controller IntelAhci --portcount 3

# Create and add hard disk. AWS likes VHD, VMDK, and RAW
# I chose VHD because of it's dynamic space allocation and it seems to work.
# VMDK might be better, but my VirtualBox VMDK files aren't recognized
#  by AWS.
# I'd like to use RAW, but it means that we have to upload all 2 gigs,
#  even the blank gigs...there's no compression or sparse detection done by the ec2 tools.
# HACK: find the config file just made so we know where to place the disk image later.
# awk beauty below is brought to you by: http://stackoverflow.com/questions/5081916/how-to-print-all-the-columns-after-a-particular-number-using-awk
config_file="`VBoxManage showvminfo $machine_name | grep ^Config\ file | awk '{ s = ""; for (i = 3; i <= NF; i++) s = s $i " "; print s }'`"
machine_path=`dirname "$config_file"`
disk_path=$machine_path/disk.vhd

VBoxManage createhd --filename "$disk_path" --size 2048 --format VHD
VBoxManage storageattach $machine_name --storagectl sata --port 1 --type hdd --medium "$disk_path"

# mount iso
VBoxManage storageattach $machine_name --storagectl sata --port 2 --type dvddrive --medium "$iso"

# If this is Cygwin/Windows, we need to send VBox's Named Pipe to something that socat can reach.
if [ "$namedpipe" == "yes" ]; then
    set +e
    taskkill /F /IM vmwaregateway.exe
    set -e
    ./vmwaregateway /T &
    vmwaregateway_pid=$!
    echo "vmwaregateway.exe pid $vmwaregateway_pid"
fi

# Start the VM
echo "Starting VM"
VBoxManage startvm $machine_name

# Install VyOS
# Sends commands over the serial console using expect
echo "Installing over serial console"
./wait-for-login.expect $socat_pipe_name
./vyos-install.expect $socat_pipe_name

shutdown_vm $machine_name $socat_pipe_name

# Remove the CD from the SATA controller by "attaching" an empty device :)
VBoxManage storageattach $machine_name --storagectl sata --port 2 --type dvddrive --medium none

# Boot it
VBoxManage startvm $machine_name

# Run another expect script which logs in and preps config
echo "Configuring VyOS for AWSification"
./wait-for-login.expect $socat_pipe_name
./vyos-configure.expect $socat_pipe_name

shutdown_vm $machine_name $socat_pipe_name

# Hack alert: we need to get a copy of the partition data, not the whole disk, onto it's own disk image.
# Create a second disk, add the installer iso back on, and we'll use the installer environment to perform the dd.
disk_part_path=$machine_path/disk-part.vhd
VBoxManage createhd --filename "$disk_part_path" --size 2048 --format VHD
VBoxManage storageattach $machine_name --storagectl sata --port 3 --type hdd --medium "$disk_part_path"
# Mount vyos installer iso
VBoxManage storageattach $machine_name --storagectl sata --port 2 --type dvddrive --medium "$iso"
# Boot it
VBoxManage startvm $machine_name
# Run expect script which does the dd business
echo "Copying disk partition to a full disk image"
./wait-for-login.expect $socat_pipe_name
./copy-partition-to-disk.expect $socat_pipe_name

shutdown_vm $machine_name $socat_pipe_name

# Eject the disk so further hackery on the VM can be done
VBoxManage storageattach $machine_name --storagectl sata --port 2 --type dvddrive --medium none

if [ "$namedpipe" == "yes" ]; then
    # clean up
    taskkill /F /IM vmwaregateway.exe
fi

cp -v "$disk_part_path" ./$machine_name-part.vhd

# Uncomment this for production: VBoxManage unregistervm --delete $machine_name

echo "VirtualBox build done. Disk image is here: $machine_name.vhd"
echo "I've left the VirtualBox VM in place, which can be deleted with ./cleanup-vms"
echo "Now go run ./push_image_to_aws $machine_name-part.vhd"
